{"remainingRequest":"/Users/bolen/Dev/Web/Homestead/auth/node_modules/babel-loader/lib/index.js!/Users/bolen/Dev/Web/Homestead/auth/src/store.js","dependencies":[{"path":"/Users/bolen/Dev/Web/Homestead/auth/src/store.js","mtime":1617742397620},{"path":"/Users/bolen/Dev/Web/Homestead/auth/node_modules/cache-loader/dist/cjs.js","mtime":1617738178844},{"path":"/Users/bolen/Dev/Web/Homestead/auth/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    user: {}\n  },\n  mutations: {\n    auth_request: function auth_request(state) {\n      state.status = 'loading';\n    },\n    auth_success: function auth_success(state, token, user) {\n      state.status = 'success';\n      state.token = token;\n      state.user = user;\n    },\n    auth_error: function auth_error(state) {\n      state.status = 'error';\n    },\n    getnetworks: function getnetworks(state) {\n      state.status = 'success';\n    },\n    logout: function logout(state) {\n      state.status = '';\n      state.token = '';\n    }\n  },\n  actions: {\n    login: function login(_ref, user) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve, reject) {\n        commit('auth_request');\n        axios({\n          url: 'http://sandboxapi.my.id/api/login',\n          data: user,\n          method: 'POST'\n        }).then(function (resp) {\n          var token = resp.data.token;\n          var user = resp.data.user;\n          localStorage.setItem('token', token); // Add the following line:\n\n          axios.defaults.headers.common['Authorization'] = token;\n          commit('auth_success', token, user);\n          resolve(resp);\n        }).catch(function (err) {\n          commit('auth_error');\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n    register: function register(_ref2, user) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        commit('auth_request');\n        axios({\n          url: 'http://sandboxapi.my.id/api/register',\n          data: user,\n          method: 'POST'\n        }).then(function (resp) {\n          var token = resp.data.token;\n          var user = resp.data.user;\n          localStorage.setItem('token', token); // Add the following line:\n\n          axios.defaults.headers.common['Authorization'] = token;\n          commit('auth_success', token, user);\n          resolve(resp);\n        }).catch(function (err) {\n          commit('auth_error', err);\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n    getnetworks: function getnetworks(_ref3) {\n      var commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        commit('getnetworks');\n        axios({\n          url: 'http://sandboxapi.my.id/api/networks',\n          method: 'GET',\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(function (resp) {\n          var data = resp.data.data;\n          resolve(data);\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    },\n    logout: function logout(_ref4) {\n      var commit = _ref4.commit;\n      return new Promise(function (resolve, reject) {\n        commit('logout');\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n        resolve();\n      });\n    }\n  },\n  getters: {\n    isLoggedIn: function isLoggedIn(state) {\n      return !!state.token;\n    },\n    authStatus: function authStatus(state) {\n      return state.status;\n    }\n  }\n});",{"version":3,"sources":["src/store.js"],"names":["Vue","Vuex","axios","use","Store","state","status","token","localStorage","getItem","user","mutations","auth_request","auth_success","auth_error","getnetworks","logout","actions","login","commit","Promise","resolve","reject","url","data","method","then","resp","setItem","defaults","headers","common","catch","removeItem","err","register","getters","isLoggedIn","authStatus"],"mappings":"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","sourceRoot":"/Users/bolen/Dev/Web/Homestead/auth","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n\tstate: {\n  \t\tstatus: '',\n  \t\ttoken: localStorage.getItem('token') || '',\n  \t\tuser : {}\n\t},\n\tmutations: {\n\t\tauth_request(state){\n\t    \tstate.status = 'loading'\n\t  \t},\n\t  \tauth_success(state, token, user){\n\t\t    state.status = 'success'\n\t\t    state.token = token\n\t\t    state.user = user\n\t  \t},\n\t  \tauth_error(state){\n\t    \tstate.status = 'error'\n\t  \t},\n\t\tgetnetworks(state) {\n\t\t\tstate.status = 'success'\n\t\t},\n\t  \tlogout(state){\n\t    \tstate.status = ''\n\t    \tstate.token = ''\n\t  \t},\n\t},\n\tactions: {\n\t  \tlogin({commit}, user){\n\t        return new Promise((resolve, reject) => {\n\t            commit('auth_request')\n\t            axios({url: 'http://sandboxapi.my.id/api/login', data: user, method: 'POST' })\n\t            .then(resp => {\n\t                const token = resp.data.token\n\t                const user = resp.data.user\n\t                localStorage.setItem('token', token)\n\t                // Add the following line:\n\t                axios.defaults.headers.common['Authorization'] = token\n\t                commit('auth_success', token, user)\n\t                resolve(resp)\n\t            })\n\t            .catch(err => {\n\t                commit('auth_error')\n\t                localStorage.removeItem('token')\n\t                reject(err)\n\t            })\n\t        })\n\t    },\n\t    register({commit}, user){\n\t    \treturn new Promise((resolve, reject) => {\n\t            commit('auth_request')\n\t            axios({url: 'http://sandboxapi.my.id/api/register', data: user, method: 'POST' })\n\t            .then(resp => {\n\t                const token = resp.data.token\n\t                const user = resp.data.user\n\t                localStorage.setItem('token', token)\n\t                // Add the following line:\n\t                axios.defaults.headers.common['Authorization'] = token\n\t                commit('auth_success', token, user)\n\t                resolve(resp)\n\t            })\n\t            .catch(err => {\n\t                commit('auth_error', err)\n\t                localStorage.removeItem('token')\n\t                reject(err)\n\t            })\n\t        })\n\t    },\n\t\tgetnetworks({commit}){\n\t        return new Promise((resolve, reject) => {\n\t            commit('getnetworks')\n\t            axios({url: 'http://sandboxapi.my.id/api/networks', method: 'GET', headers: {\n\t\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('token')\n\t\t\t\t}})\n\t            .then(resp => {\n\t                const data = resp.data.data\n\t                resolve(data)\n\t            })\n\t            .catch(err => {\n\t                reject(err)\n\t            })\n\t        })\n\t    },\n\t  \tlogout({commit}){\n\t\t    return new Promise((resolve, reject) => {\n\t\t      \tcommit('logout')\n\t\t      \tlocalStorage.removeItem('token')\n\t\t      \tdelete axios.defaults.headers.common['Authorization']\n\t\t      \tresolve()\n\t\t    })\n\t  \t}\n\t},\n\tgetters : {\n\t  isLoggedIn: state => !!state.token,\n\t  authStatus: state => state.status,\n\t}\n})\n"]}]}